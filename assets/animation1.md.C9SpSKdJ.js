import{_ as s,c as i,o as a,a1 as n}from"./chunks/framework.CDMz6GEI.js";const o=JSON.parse('{"title":"写一个动画","description":"","frontmatter":{},"headers":[],"relativePath":"animation1.md","filePath":"animation1.md"}'),p={name:"animation1.md"},e=n(`<h1 id="写一个动画" tabindex="-1">写一个动画 <a class="header-anchor" href="#写一个动画" aria-label="Permalink to &quot;写一个动画&quot;">​</a></h1><p>游戏中最重要的就是动画。但 Pygame 并不内置动画（<em>而且内置了也没人用</em>）。每个人都对动画有不同的要求，封装起来反而显得繁琐。</p><p><code>pygame.image.load(image_path)</code> 可以加载一张图片。</p><p>你可以下载下面大小为 50 x 50 的图，并在你的 Pygame 程序文件同一目录下保存为 <code>beach_ball.png</code> 进行练习。</p><p><img src="https://gcore.jsdelivr.net/gh/dddddgz/picture-bed@master/img/beach_ball.png" alt=""></p><p>动画的原理是不断擦除再绘制。<code>screen.fill(color)</code> 可以做到“完全擦除”的方法，<code>screen.blit(surface, position)</code> 可以显示一张图。</p><p>我们可以设置两个变量 (x, y) 表示球的坐标。需要注意的是，<code>screen.blit(surface, position)</code> 中 <code>position</code> 如果传递 <code>tuple</code> 或 <code>list</code>，则位置总是代表左上角。</p><p>完整代码：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pygame</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pygame.init()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">screen </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pygame.display.set_mode((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">640</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">480</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">image </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pygame.image.load(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;beach_ball.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x, y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">clock </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pygame.time.Clock()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">running </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> True</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> running:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    clock.tick(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    screen.fill((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    screen.blit(image, (x, y))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pygame.event.get():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event.type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pygame.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">QUIT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            running </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> False</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pygame.display.flip()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pygame.quit()</span></span></code></pre></div><p>已知 <code>clock.tick(30)</code> 导致 1 秒执行 30 次循环：x = 10 * 30 = 300，y = 5 * 30 = 150。</p><p>窗口大小为 <code>(640, 480)</code>，640 / 300 ≈ 2.133，480 / 150 = 3.2。因此，球将在大约 2.133 秒后完全移出屏幕，球将绘制在屏幕之外，将不可见。</p><p><img src="https://gcore.jsdelivr.net/gh/dddddgz/picture-bed@master/img/moving_beach_ball.gif" alt=""></p><p>你可以尝试修改 x 和 y 每次增加的值，或者修改 <code>clock.tick()</code> 的帧率（不建议这么做，容易看起来“卡顿”，再加上 Windows 有窗口一段时间无反应再点击就卡死的机制，用户体验极差）。</p>`,13),l=[e];function t(h,k,E,d,r,g){return a(),i("div",null,l)}const y=s(p,[["render",t]]);export{o as __pageData,y as default};
