import{_ as s,c as i,o as a,a1 as e}from"./chunks/framework.CDMz6GEI.js";const E=JSON.parse('{"title":"创建窗口","description":"","frontmatter":{},"headers":[],"relativePath":"create-window.md","filePath":"create-window.md"}'),n={name:"create-window.md"},p=e(`<h1 id="创建窗口" tabindex="-1">创建窗口 <a class="header-anchor" href="#创建窗口" aria-label="Permalink to &quot;创建窗口&quot;">​</a></h1><p><code>pygame.display</code> 库 控制 Pygame 的显示。例如 <code>pygame.display.flip()</code>、 <code>pygame.display.update()</code>，都与窗口上显示的图形有关。</p><p>通过 <code>pygame.display.set_mode()</code>，如果目前有窗口，则关闭这个窗口。无论如何，再创建一个新窗口。</p><p>通常，<code>pygame.display.setmode()</code> 里只填一个 <code>tuple</code>，例如 <code>pygame.display.set_mode((640, 480))</code> 创建一个窗口大小为 640 * 480 的窗口。</p><p>在 Windows 系统中，如果你的系统缩放不是 100%，可以在程序开头加上<a href="/pygame-tutorial/scale.html">这些代码</a>，可以通过 <code>int(P(640))</code> 单独求得缩放比例为 125% 时，宽应当为 <code>512</code>；通过 <code>P(640, 480)</code> 求得缩放比例为 125% 时，这个大小应该改为 <code>(512.0, 384.0)</code>。</p><p>另外，建议无论接下来的程序是否需要事先 <code>pygame.init()</code>，都应该在导入 Pygame 后立即执行 <code>pygame.init()</code> 语句。</p><p>虽然后面不会用到（<em>说实话，也就这一次不会用到</em>）所创建的屏幕，但建议赋值给 <code>screen</code> 变量，锻炼写 <code>screen = pygame.display.set_mode((640, 480))</code> 的肌肉记忆（<em>我一秒可以打完这行代码……</em>）。</p><p>完整代码如下：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pygame</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pygame.init()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">screen </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pygame.display.set_mode((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">640</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">480</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">running </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> True</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> running:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pygame.event.get():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event.type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pygame.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">QUIT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            running </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> False</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pygame.display.flip()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pygame.quit()</span></span></code></pre></div><p>你应该看到一个黑窗口：</p><p><img src="https://gcore.jsdelivr.net/gh/dddddgz/picture-bed@master/img/black_window.png" alt=""></p><p>那就对了。</p>`,12),t=[p];function l(h,d,k,c,o,r){return a(),i("div",null,t)}const y=s(n,[["render",l]]);export{E as __pageData,y as default};
